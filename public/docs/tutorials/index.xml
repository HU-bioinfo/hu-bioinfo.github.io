<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on 北海道大学医学部 Bioinfo研究会</title><link>https://hu-bioinfo.github.io/docs/tutorials/</link><description>Recent content in Tutorials on 北海道大学医学部 Bioinfo研究会</description><generator>Hugo</generator><language>ja</language><lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate><atom:link href="https://hu-bioinfo.github.io/docs/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>linux-command</title><link>https://hu-bioinfo.github.io/docs/tutorials/linux-command/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hu-bioinfo.github.io/docs/tutorials/linux-command/</guid><description>&lt;h1 id="linuxコマンドの基本">
 Linuxコマンドの基本
 &lt;a class="anchor" href="#linux%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%81%ae%e5%9f%ba%e6%9c%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="1-最低限必要なコマンド">
 1. 最低限必要なコマンド
 &lt;a class="anchor" href="#1-%e6%9c%80%e4%bd%8e%e9%99%90%e5%bf%85%e8%a6%81%e3%81%aa%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89">#&lt;/a>
&lt;/h2>
&lt;p>Linuxの基本操作を行うために、最低限知っておくべきコマンドを紹介します。&lt;/p>
&lt;h3 id="11-ファイルディレクトリ操作">
 1.1 ファイル・ディレクトリ操作
 &lt;a class="anchor" href="#11-%e3%83%95%e3%82%a1%e3%82%a4%e3%83%ab%e3%83%87%e3%82%a3%e3%83%ac%e3%82%af%e3%83%88%e3%83%aa%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;code>ls&lt;/code> ：ファイルやディレクトリを一覧表示&lt;/li>
&lt;li>&lt;code>cd&lt;/code> ：ディレクトリを移動&lt;/li>
&lt;li>&lt;code>pwd&lt;/code> ：現在のディレクトリを表示&lt;/li>
&lt;li>&lt;code>mkdir&lt;/code> ：新しいディレクトリを作成&lt;/li>
&lt;li>&lt;code>rm&lt;/code> ：ファイルやディレクトリを削除&lt;/li>
&lt;li>&lt;code>cp&lt;/code> ：ファイルやディレクトリをコピー&lt;/li>
&lt;li>&lt;code>mv&lt;/code> ：ファイルやディレクトリを移動&lt;/li>
&lt;/ul>
&lt;h3 id="12-データ操作">
 1.2 データ操作
 &lt;a class="anchor" href="#12-%e3%83%87%e3%83%bc%e3%82%bf%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;code>cat&lt;/code> ：ファイルの中身を表示、結合&lt;/li>
&lt;li>&lt;code>less&lt;/code> ：ファイルの内容をページ送りで表示&lt;/li>
&lt;li>&lt;code>grep&lt;/code> ：特定の単語を検索して表示&lt;/li>
&lt;/ul>
&lt;h2 id="2-知っておくと便利なコマンド">
 2. 知っておくと便利なコマンド
 &lt;a class="anchor" href="#2-%e7%9f%a5%e3%81%a3%e3%81%a6%e3%81%8a%e3%81%8f%e3%81%a8%e4%be%bf%e5%88%a9%e3%81%aa%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89">#&lt;/a>
&lt;/h2>
&lt;p>基本コマンドに加えて、知っておくと便利なコマンドを紹介します。&lt;/p>
&lt;h3 id="21-権限圧縮バージョン管理">
 2.1 権限・圧縮・バージョン管理
 &lt;a class="anchor" href="#21-%e6%a8%a9%e9%99%90%e5%9c%a7%e7%b8%ae%e3%83%90%e3%83%bc%e3%82%b8%e3%83%a7%e3%83%b3%e7%ae%a1%e7%90%86">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;code>chmod&lt;/code> ：ファイルの権限を変更&lt;/li>
&lt;li>&lt;code>echo&lt;/code> ：指定した文字列を標準出力に表示&lt;/li>
&lt;li>&lt;code>tar&lt;/code> ：アーカイブを作成または展開&lt;/li>
&lt;li>&lt;code>git&lt;/code> ：バージョン管理システム&lt;/li>
&lt;/ul>
&lt;h3 id="22-rスクリプトの実行">
 2.2 Rスクリプトの実行
 &lt;a class="anchor" href="#22-r%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%ae%e5%ae%9f%e8%a1%8c">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;code>Rscript&lt;/code> ：Rスクリプトを実行&lt;/li>
&lt;/ul>
&lt;h2 id="3-まとめ">
 3. まとめ
 &lt;a class="anchor" href="#3-%e3%81%be%e3%81%a8%e3%82%81">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Linuxの基本操作として、ファイル・ディレクトリ操作、データ操作のコマンドを覚えましょう。&lt;/li>
&lt;li>さらに、権限変更やアーカイブ操作、バージョン管理、Rスクリプト実行などもできると便利です。&lt;/li>
&lt;li>ターミナルを開いて、実際にコマンドを試してみましょう！&lt;/li>
&lt;/ul></description></item><item><title>R Basic Grammar</title><link>https://hu-bioinfo.github.io/docs/tutorials/r_basic_grammar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hu-bioinfo.github.io/docs/tutorials/r_basic_grammar/</guid><description>&lt;h1 id="rの基本文法">
 Rの基本文法
 &lt;a class="anchor" href="#r%e3%81%ae%e5%9f%ba%e6%9c%ac%e6%96%87%e6%b3%95">#&lt;/a>
&lt;/h1>
&lt;h2 id="プログラミング言語">
 プログラミング言語
 &lt;a class="anchor" href="#%e3%83%97%e3%83%ad%e3%82%b0%e3%83%a9%e3%83%9f%e3%83%b3%e3%82%b0%e8%a8%80%e8%aa%9e">#&lt;/a>
&lt;/h2>
&lt;p>コンピュータは字のごとく，計算をしてくれる便利な機械です．極端な話，代入と四則演算，制御構文さえあれば，理論上はどんな計算でもできるらしいです．そして，便利な計算は他の誰かがすでに作ってくれてます．(著作権とか権利の問題はあるけどな)&lt;/p>
&lt;p>てなわけで，こいつらをうまく組み合わせてやればいいんです．俺らがやる程度のプログラミングつったってやることはそんなとこ．&lt;/p>
&lt;h2 id="変数と代入そして型">
 変数と代入，そして型
 &lt;a class="anchor" href="#%e5%a4%89%e6%95%b0%e3%81%a8%e4%bb%a3%e5%85%a5%e3%81%9d%e3%81%97%e3%81%a6%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>代入なんて，これまでの数学の勉強で耳にタコができるほど聞いてきたと思います．適当な変数に適当な値を入れるあれです．Rでは&lt;code>x &amp;lt;- 10&lt;/code>みたいに書きます．これで変数&lt;code>x&lt;/code>に10が代入されたことを意味します．&lt;code>x + 20&lt;/code>は30ですね．&lt;/p>
&lt;p>代入する時，変数名は自由につけることができます．原則として，代入するものがなんなのか明示的に命名するのが大事です．例えば，BMIを計算するプログラムを書いているとすると，体重60kgを変数&lt;code>body_weight&lt;/code>に代入するのは&lt;code>body_weight &amp;lt;- 60&lt;/code>と書くようにします．適切な名前を考えるのはプログラミングをする上で肝中の肝です．&lt;/p>
&lt;p>別に&lt;code>x&lt;/code>に代入するのは整数じゃなくても小数でも，文字列でも，なんでもありです．とはいえなんでもって言われても困るので，そのなんでもについてもう少し詳しく教えます．&lt;/p>
&lt;h2 id="型">
 型
 &lt;a class="anchor" href="#%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>変数になんでも入れていい&lt;/code>における&lt;code>なんでも&lt;/code>とは型といいます．型とは数学における集合のことです．例えば，実数の集合だったり，小数点の集合だったりします．なぜ型なんて言い方をするかというと，コンピュータ独特の都合があります．コンピュータの計算資源には限りがあります．いくら実数の集合と言ったって無限に続く数字を扱うのは無理ですよね，コンピュータのストレージに限界が来てしまいます．無限に大きい数字を扱わなくても，コンピュータは2進数で計算をしているというのは聞いたことがあると思います．3.14でも0.45でも，ある小数を2進数で表そうとすると，結構な確率で無限に続く小数になってしまいます．そんなわけで，その時々の計算に適した実数の集合(例えば，0から255までという限界を定めた実数の集合)や，小数の集合を型として扱い，計算していきます．また，違う型どうしの計算も面倒臭いです．文字列という型と実数の型の足し算を求めてくださいと言われても困ってしまいます．ある型同士の計算には，それに適した計算，演算が定義されています．&lt;/p>
&lt;p>要するに似た性質を持つもの，振る舞いが決まっているものの集合を型とよび，これらを意識してコードを書いていくことになります．自分で型を定義することもできますが，基本となる型を組み合わせることが多く，そもそも自作しなくても，出来合いのものを使うのがいいと思います．てなわけで基本的な型を紹介していきます．&lt;/p>
&lt;h2 id="rにおける具体的な型と演算子">
 Rにおける具体的な型と演算子
 &lt;a class="anchor" href="#r%e3%81%ab%e3%81%8a%e3%81%91%e3%82%8b%e5%85%b7%e4%bd%93%e7%9a%84%e3%81%aa%e5%9e%8b%e3%81%a8%e6%bc%94%e7%ae%97%e5%ad%90">#&lt;/a>
&lt;/h2>
&lt;p>Rは便利なプログラミング言語なので，型といっても厳密なものではなく，ざっくりとした直感的にわかりやすいものになっています．&lt;/p>
&lt;p>また，ある型には，それぞれ演算が定義されていると説明しましたが，そのような演算を示す演算子というものがあります．そんな難しいものではなく，足し算という演算における演算子は&lt;code>+&lt;/code>です．&lt;/p>
&lt;h3 id="numeric数値型">
 Numeric(数値)型
 &lt;a class="anchor" href="#numeric%e6%95%b0%e5%80%a4%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;p>数値を表す型です．こいつら同士は四則演算ができたりと，皆さんが想像する実数の集合そのものです．実は，さらにinteger(整数)型とdouble(倍精度浮動小数点, 要するに小数)型に分けることができますが別に無視でもいいです．&lt;/p>
&lt;p>この型に定義されている演算は以下のとおりです．ちなみに，この演算子らを算術演算子といいます．(覚えなくていいです)&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>演算子&lt;/th>
 &lt;th>意味&lt;/th>
 &lt;th>コード例&lt;/th>
 &lt;th>結果&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>+&lt;/code>&lt;/td>
 &lt;td>和&lt;/td>
 &lt;td>3 + 6&lt;/td>
 &lt;td>9&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>-&lt;/code>&lt;/td>
 &lt;td>差&lt;/td>
 &lt;td>4 - 1&lt;/td>
 &lt;td>3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>*&lt;/code>&lt;/td>
 &lt;td>積&lt;/td>
 &lt;td>19 * 8&lt;/td>
 &lt;td>152&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>/&lt;/code>&lt;/td>
 &lt;td>商&lt;/td>
 &lt;td>9 / 2&lt;/td>
 &lt;td>4.5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>%/%&lt;/code>&lt;/td>
 &lt;td>整数商 (あまりを無視した商)&lt;/td>
 &lt;td>9 %/% 2&lt;/td>
 &lt;td>4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>%%&lt;/code>&lt;/td>
 &lt;td>剰余 (余り)&lt;/td>
 &lt;td>9 %% 2&lt;/td>
 &lt;td>1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>^&lt;/code>&lt;/td>
 &lt;td>累乗&lt;/td>
 &lt;td>2^4&lt;/td>
 &lt;td>16&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="logicalbool-論理型">
 Logical(bool, 論理)型
 &lt;a class="anchor" href="#logicalbool-%e8%ab%96%e7%90%86%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>TRUE&lt;/code>,&lt;code>FALSE&lt;/code>の二つだけからなる型です．こいつらには論理演算が定義されてます．論理演算って&lt;code>かつ&lt;/code>とか&lt;code>または&lt;/code>とかいうやつです．&lt;/p></description></item><item><title>Tidyverse</title><link>https://hu-bioinfo.github.io/docs/tutorials/tidyverse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hu-bioinfo.github.io/docs/tutorials/tidyverse/</guid><description>&lt;h1 id="tidyverse">
 Tidyverse
 &lt;a class="anchor" href="#tidyverse">#&lt;/a>
&lt;/h1>
&lt;h2 id="tidyverseってなんぞや">
 Tidyverseってなんぞや
 &lt;a class="anchor" href="#tidyverse%e3%81%a3%e3%81%a6%e3%81%aa%e3%82%93%e3%81%9e%e3%82%84">#&lt;/a>
&lt;/h2>
&lt;p>Tidyverseは，データ分析と可視化を効率的に行うために設計されたR言語のパッケージ群です．
このパッケージの思想上の特徴として&lt;strong>Tidy Data&lt;/strong>の原則のもと，一貫性のある操作体系により，データ処理の生産性を保つことを特徴としています．&lt;/p>
&lt;p>とはいえ含まれる内容や思想も膨大かつ難解なので，この章では，よくする使い方をメインに書いていきます．
より詳しく知りたい方は，それぞれ詳細のページを見てください．(現在製作中です)&lt;/p>
&lt;details >&lt;summary>Tidyverseのパッケージ群&lt;/summary>
 &lt;div class="markdown-inner">
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>パッケージ名&lt;/th>
 &lt;th>役割&lt;/th>
 &lt;th>主な機能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://hu-bioinfo.github.io/docs/tutorials/ggplot2/"> ggplot2 &lt;/a>&lt;/td>
 &lt;td>データ可視化&lt;/td>
 &lt;td>グラフィックスの文法に基づいて、グラフを宣言的に作成できる&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>dplyr&lt;/td>
 &lt;td>データ操作&lt;/td>
 &lt;td>フィルタリング，要約，並べ替え，結合といったデータ操作&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tidyr&lt;/td>
 &lt;td>データ整理&lt;/td>
 &lt;td>&lt;strong>Tidy data&lt;/strong>作成&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>readr&lt;/td>
 &lt;td>データ読み込み&lt;/td>
 &lt;td>矩形データ（csv、tsv、fwfなど）の高速読み込み&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>purrr&lt;/td>
 &lt;td>関数型プログラミング&lt;/td>
 &lt;td>ベクトルやリストの操作（map関数など）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>tibble&lt;/td>
 &lt;td>データフレームの現代的な再構築&lt;/td>
 &lt;td>モダンなデータフレーム構造&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>stringr&lt;/td>
 &lt;td>文字列操作&lt;/td>
 &lt;td>パターンマッチングや文字列の処理&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>forcats&lt;/td>
 &lt;td>因子型操作&lt;/td>
 &lt;td>因子データのレベルの順序や値の変更など&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>lubridate&lt;/td>
 &lt;td>日付・時刻データ操作&lt;/td>
 &lt;td>日付や時間の解析と処理&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
 &lt;/div>
&lt;/details>
&lt;h2 id="tidy-data">
 Tidy Data
 &lt;a class="anchor" href="#tidy-data">#&lt;/a>
&lt;/h2>
&lt;p>基本的にデータはExcelのように表形式となったデータを扱います．この時，ただ漫然と表を作成するのではなく，一定のルールの下に作成，加工していくことで効率や安全性が増します．具体的なルールとは以下の三つのことです.&lt;/p>
&lt;ol>
&lt;li>一つの変数は一つの列に（Each variable must have its own column.）&lt;/li>
&lt;li>一つの観測は一つの行に（Each observation must have its own row.）&lt;/li>
&lt;li>一つの値は一つのセルに（Each value must have its own cell.）&lt;/li>
&lt;/ol>
&lt;p>上記3つを満たした表形式のデータを &lt;strong>Tidy Data(整列データ)&lt;/strong> といいます．&lt;/p></description></item><item><title>ggplot2</title><link>https://hu-bioinfo.github.io/docs/tutorials/ggplot2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hu-bioinfo.github.io/docs/tutorials/ggplot2/</guid><description>&lt;h1 id="ggplot2で作る魅力的なグラフ">
 ggplot2で作る魅力的なグラフ
 &lt;a class="anchor" href="#ggplot2%e3%81%a7%e4%bd%9c%e3%82%8b%e9%ad%85%e5%8a%9b%e7%9a%84%e3%81%aa%e3%82%b0%e3%83%a9%e3%83%95">#&lt;/a>
&lt;/h1>
&lt;p>このガイドでは、Rの&lt;strong>ggplot2&lt;/strong>パッケージを用いて、シンプルかつ柔軟にグラフを作成する方法を紹介します。基本的な使い方から、グラフのカスタマイズ、複数の具体例を通して実際に使えるコードを掲載しています。なお、ここではdplyrの基本的なコマンド（パイプ(|&amp;gt;)、select、filterなど）は既にご存知であるものとして解説します。&lt;/p>
&lt;hr>
&lt;h2 id="1-ggplot2の基本構造">
 1. ggplot2の基本構造
 &lt;a class="anchor" href="#1-ggplot2%e3%81%ae%e5%9f%ba%e6%9c%ac%e6%a7%8b%e9%80%a0">#&lt;/a>
&lt;/h2>
&lt;p>ggplot2では、まずデータフレームを指定し、&lt;code>aes()&lt;/code>関数で美的属性（x軸、y軸、色、サイズなど）を設定します。その後、&lt;code>geom_&lt;/code>系列の関数で具体的なグラフの種類を指定します。&lt;/p>
&lt;p>基本構造は以下の通りです。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(ggplot2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ggplot&lt;/span>(data &lt;span style="color:#f92672">=&lt;/span> データ, &lt;span style="color:#a6e22e">aes&lt;/span>(x &lt;span style="color:#f92672">=&lt;/span> x軸, y &lt;span style="color:#f92672">=&lt;/span> y軸)) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> geom_○○()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="2-具体例">
 2. 具体例
 &lt;a class="anchor" href="#2-%e5%85%b7%e4%bd%93%e4%be%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="21-散布図の作成">
 2.1 散布図の作成
 &lt;a class="anchor" href="#21-%e6%95%a3%e5%b8%83%e5%9b%b3%e3%81%ae%e4%bd%9c%e6%88%90">#&lt;/a>
&lt;/h3>
&lt;p>irisデータセットを用い、&lt;code>Sepal.Length&lt;/code>と&lt;code>Sepal.Width&lt;/code>の散布図を作成。種別（Species）ごとに色分けして表示します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(dplyr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(ggplot2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iris &lt;span style="color:#f92672">|&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ggplot&lt;/span>(&lt;span style="color:#a6e22e">aes&lt;/span>(x &lt;span style="color:#f92672">=&lt;/span> Sepal.Length, y &lt;span style="color:#f92672">=&lt;/span> Sepal.Width, color &lt;span style="color:#f92672">=&lt;/span> Species)) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">geom_point&lt;/span>(size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">labs&lt;/span>(title &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Irisデータセットの散布図&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;がく片の長さ&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;がく片の幅&amp;#34;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">theme_minimal&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="iris_scatter.png" alt="散布図の例" />&lt;/p>
&lt;hr>
&lt;h3 id="22-ヒストグラムの作成">
 2.2 ヒストグラムの作成
 &lt;a class="anchor" href="#22-%e3%83%92%e3%82%b9%e3%83%88%e3%82%b0%e3%83%a9%e3%83%a0%e3%81%ae%e4%bd%9c%e6%88%90">#&lt;/a>
&lt;/h3>
&lt;p>irisデータセットの&lt;code>Sepal.Length&lt;/code>の分布をヒストグラムで表示し、Speciesごとに色分けします。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>iris &lt;span style="color:#f92672">|&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ggplot&lt;/span>(&lt;span style="color:#a6e22e">aes&lt;/span>(x &lt;span style="color:#f92672">=&lt;/span> Sepal.Length, fill &lt;span style="color:#f92672">=&lt;/span> Species)) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">geom_histogram&lt;/span>(bins &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>, alpha &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.7&lt;/span>, position &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;identity&amp;#34;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">labs&lt;/span>(title &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Iris: Sepal.Lengthのヒストグラム&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;がく片の長さ&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;度数&amp;#34;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">theme_classic&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="iris_histogram.png" alt="ヒストグラムの例" />&lt;/p></description></item><item><title>Example</title><link>https://hu-bioinfo.github.io/docs/tutorials/example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hu-bioinfo.github.io/docs/tutorials/example/</guid><description>&lt;h1 id="example">
 Example
 &lt;a class="anchor" href="#example">#&lt;/a>
&lt;/h1>
&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p></description></item></channel></rss>